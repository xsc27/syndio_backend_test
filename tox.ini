[tox]
minversion = 3.7.0
skip_missing_interpreters = {env:TOX_SKIP_MISSING_INTERPRETERS:true}
isolated_build = true
envlist = py3.{8,9,10},docs,lint,style,pkg

[testenv]
description = Execute Tests
basepython = python3
py3.8:   basepython = python3.8
py3.9:   basepython = python3.9
py3.10:  basepython = python3.10
passenv =
    PYTEST_XDIST_PROC_NR
; deps = -r requirements/test.txt
extras = test
commands =
    pytest {posargs}

[testenv:docs]
description = Build Documentation
usedevelop = true
; deps = -r requirements/docs.txt
extras = docs
commands =
    mkdocs {posargs:build}

[testenv:lint]
description = Static Analysis
; deps = -r requirements/lint.txt
extras = lint
commands =
    flakehell lint src/ setup.py
    pylint src/ setup.py

[testenv:pkg]
description = Check Distribution Package
skip_install = true
deps =
    pyroma
    readme_renderer[md]
    twine
commands_pre =
    pip3 wheel --use-feature=in-tree-build --no-deps --wheel-dir dist .
commands =
    pyroma .
    twine check dist/*

[testenv:pin]
description = Check Distribution Package
skip_install = true
deps =
    pip-tools
allowlist_externals = sh
commands =
    pip-compile --generate-hashes --reuse-hashes --output-file=requirements/lock.txt pyproject.toml
    sh -c "for EXTRA in docs lint test; do  \
      pip-compile --extra=$EXTRA --generate-hashes --reuse-hashes --output-file=requirements/$EXTRA.txt pyproject.toml ;\
    done"
